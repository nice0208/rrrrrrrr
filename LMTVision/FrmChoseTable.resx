<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8qEWLfo/CrlQ7IhoWv8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8qEWLfo/CrlQ7IhoWv8AAAAASUVORK5CYII=
</value>
  </data>
</root>